package algorithm;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import db.DBConnection;
import db.DBConnectionFactory;
import entity.Item;


public class GeoRecommendation {
	public List<Item> recommendItems(String userId, double lat, double lon) {
		List<Item> recommendedItems = new ArrayList<>();
		DBConnection conn = DBConnectionFactory.getConnection();
		
		// Step 1 Get all favorited items
		Set<String> favoriteItemIds = conn.getFavoriteItemIds(userId);
		
		// Step 2 Get all categories of favorited items, sort by count
		Map<String, Integer> allCategories = new HashMap<>();
		for (String itemId : favoriteItemIds) {
			Set<String> categories = conn.getCategories(itemId);
			for (String category : categories) {
//				Method 1:
//				if (allCategories.containsKey(category)) {
//					allCategories.put(category, allCategories.get(category) + 1);
//				} else {
//					allCategories.put(category, 1);
//				}
//				Method 2:
				allCategories.put(category, allCategories.getOrDefault(category, 0) + 1);
			}
		}
		// Step 3, do search based on category, filter out favorited events, sort by
		// distance

	}
}
